---
- name: Revoke privs on db
  become: true
  become_user: postgres
  community.postgresql.postgresql_privs:
    login_password: "{{ lookup('env', 'DB_PASS') }}"
    database: "{{ curr_db.name }}"
    role: "{{ curr_db.owner }}"
    state: absent
    privs: ALL
    type: database
  loop: "{{ database | dict2items | map(attribute='value') | list }}"
  loop_control:
    loop_var: curr_db
  when:
    - curr_db.enabled | bool
    - curr_db.name != 'postgres'
  failed_when: false
  no_log: "{{ not debug }}"

- name: Remove databases
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    login_password: "{{ lookup('env', 'DB_PASS') }}"
    name: "{{ curr_db.name }}"
    owner: "{{ curr_db.owner }}"
    state: absent
  loop: "{{ database | dict2items | map(attribute='value') | list }}"
  loop_control:
    loop_var: curr_db
  when:
    - curr_db.enabled | bool
    - curr_db.name != 'postgres'
  no_log: "{{ not debug }}"

- name: Stop PostgreSQL server
  ansible.builtin.systemd:
    name: "{{ postgresql_daemon }}"
    state: stopped
    enabled: false

- name: Remove prerequisite packages
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"

